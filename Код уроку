using System;
class Program
{
static void PrintHelloWorld()
{
Console.WriteLine(&quot;Hello World!&quot;);
}
static void PrintHello(string name)
{
var text = &quot;Hello &quot; + name + &quot;!&quot;;
Console.WriteLine(text);
}
static int Cube(int x)
{
return x * x * x;
}
static void Main(string[] args)

{
PrintHelloWorld();
PrintHello(&quot;Andrew&quot;);
var b1 = Cube(2); //8
var b2 = Cube(3); //27
Console.ReadLine();
}
    }


var a = new int[10];
var b = new int[7];
for (int i = 0; i &lt; a.Length; i++)
{
Console.Write($&quot;a[{i}] = &quot;);
a[i] = Convert.ToInt32(Console.ReadLine());
}
for (int i = 0; i &lt; b.Length; i++)
{
Console.Write($&quot;b[{i}] = &quot;);
b[i] = Convert.ToInt32(Console.ReadLine());
}



static int[] GetArrayFromConsole(string arrayName, int
elementCount)
{
var retVal = new int[elementCount];
for (int i = 0; i &lt; retVal.Length; i++)
{
Console.Write($&quot;{arrayName}[{i}] = &quot;);
retVal[i] = Convert.ToInt32(Console.ReadLine());
}
return retVal;
}

static void Main(string[] args)
{
int[] t = GetArrayFromConsole(&quot;t&quot;, 5);
var g = GetArrayFromConsole(&quot;g&quot;, 4);
}



static void Test(int i)
{
if (i &lt;= 0 || i &gt; 5)
{
return;
Console.Write(&quot;123&quot;); //цей рядок завжди ігнорується
}
Console.WriteLine(i);
}
static string ZeroCompare(double number)
{
if (number &lt; 0)
{
return &quot;Число менше нуля&quot;;
}
else if (number &gt; 0)
{
return &quot;Число більше нуля&quot;;
}
return &quot;Число рівне нулю&quot;;
}



using System;
class Program
{
static int Add(int x1, int x2)
{
x1 += x2; //зміна x1 не впливає на передану в якості
аргументу змінну num1
return x1;
}
static void Main(string[] args)
{
var num1 = 2;
var num2 = 5;
var sum = Add(num1, num2);
Console.WriteLine($&quot;{num1} + {num2} = {sum}&quot;);
Console.ReadLine();
}
}


using System;
class Program
{
static int Mult(ref int x1, int x2)
{
x1 *= x2; //зміна x1 впливає на змінну n1
return x1;
}
static void Main(string[] args)
{
var n1 = 24;
var n2 = 4;
var mult = Mult(ref n1, n2);
//змінна n1 містить нове значення

Console.WriteLine($&quot;{n1}&quot;);
Console.ReadLine();
}
}




using System;
class Program
{
static string Div(int a, int b, out int result)
{
if (b == 0)
{
result = int.MinValue;
return &quot;На нуль ділити не можна!&quot;;
}
else
{
result = a / b;
return &quot;&quot;;
}
}
static void PrintResult(string errorText, int res)
{
if (string.IsNullOrEmpty(errorText))
{
Console.WriteLine(res);
}
else
{
Console.WriteLine(errorText);
}
}
static void Main(string[] args)
{
int r1;
var err1 = Div(64, 8, out r1);
PrintResult(err1, r1);

//змінна r2 оголошується в списку аргументів
var err2 = Div(34, 0, out int r2);
PrintResult(err2, r2);
Console.ReadLine();
}
}


static void Main(string[] args)
{

//максимальне з цілих двох чисел
int Max(int a, int b)
{
if (a &gt; b)
return a;
return b;
}
// мінімальне з двох цілих чисел
int Min(int c, int d) =&gt; c &lt; d ? c : d;
var t1 = Max(13, 22);
var t2 = Min(42, 56);
}




using System;
class Program
{
static int ArrayMax(int[] array)
{
var maxValue = int.MinValue;
foreach (var element in array)
{
if (maxValue &lt; element)
{
maxValue = element;
}
}
return maxValue;
}
static void Main(string[] args)
{
var a = new[] { 1, 2, 3, 4, 5, 6, 7, 8, 9 };
Console.WriteLine($&quot;Максимальне значення масиву
{ArrayMax(a)}&quot;);
Console.ReadLine();
}

}


using System;
class Program
{
static void ChangeToAbs(int[] arr)
{
for (var i = 0; i &lt; arr.Length; i++)
{
if (arr[i] &lt; 0)
{
arr[i] *= -1; //зміна знаку числа, також можна
використати Math.Abs
}
}
}
static void Main(string[] args)
{
var a = new[] { -2, 5, 7, 3, -9, -6, 0, -1 };
ChangeToAbs(a);
Console.WriteLine(string.Join(&quot;, &quot;, a));
Console.ReadLine();
}
}



using System;
class Program
{
static float Minimal(params float[] values)
{
var min = float.MaxValue;
for (var i = 0; i &lt; values.Length; i++)
{
if (min &gt; values[i])
{
min = values[i];
}
}
return min;
}
static void Main(string[] args)
{
Console.WriteLine(Minimal()); //3.4E38
Console.WriteLine(Minimal(2, 5)); //2
Console.WriteLine(Minimal(6, 5, 4, 3, 1));//1
Console.WriteLine(Minimal(new[] { 5f, 9f })); //5
Console.ReadLine();
}
}


using System;
class Program
{
static uint FibonacciNum(uint n)
{
return (n == 0 || n == 1)
? 1
: FibonacciNum(n - 1) + FibonacciNum(n - 2);
/*те саме без використання тернарного оператора
if (n == 0 || n == 1)
{
return 1;
}
return FibonacciNum(n - 1) + FibonacciNum(n - 2);
*/
}
static void Main(string[] args)
{
Console.Write(&quot;N = &quot;);
var n = Convert.ToUInt32(Console.ReadLine());
Console.WriteLine($&quot;{n} перших чисел Фібоначчі&quot;);
for (uint i = 0; i &lt; n; i++)
{
var separator = i + 1 == n ? string.Empty : &quot;, &quot;;
Console.Write($&quot;{FibonacciNum(i)}{separator}&quot;);
}
Console.ReadLine();
}
}